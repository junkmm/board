name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: board-app

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
    - name: Setup Gradle
    
      uses: gradle/actions/setup-gradle@v3
    - name: Test with Gradle

      run: ./gradlew test
    - name: Build with Gradle
      run: ./gradlew build

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test-build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: mode=false

      - name: Generate imagedefinitions.json for ECS
        run: |
          mkdir -p deploy
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}"
          printf '[{"name":"board","imageUri":"%s"}]' "$IMAGE_URI" > deploy/imagedefinitions.json

      - name: Push imagedefinitions.json to board-gitops repo
        run: |
          GITOPS_REPO="https://x-access-token:${{ secrets.GITOPS_TOKEN }}@github.com/junkmm/board-gitops.git"
          git clone "$GITOPS_REPO" gitops-tmp
          cp deploy/imagedefinitions.json gitops-tmp/imagedefinitions.json
          cd gitops-tmp
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          git add imagedefinitions.json
          git commit -m "Update imagedefinitions.json for ${{ github.sha }}" || echo "No changes to commit"
          git push origin main
